# Pipeline will be triggered for PR & any updates on the PR on all branches
pr:
  branches:
    include:
    - '*'

# Trigger CI for only main/release branches
trigger:
  branches:
    include:
    - main
    - release/*

resources:
 repositories:
   - repository: azure-activedirectory-tokenbroker-for-objc
     type: github
     endpoint: 'MSAL ObjC Service Connection'
     name: AzureAD/azure-activedirectory-tokenbroker-for-objc

   - repository: microsoft-authentication-library-for-objc
     type: github
     endpoint: 'MSAL ObjC Service Connection'
     name: AzureAD/microsoft-authentication-library-for-objc

   - repository: WorkplaceJoin-for-iOS
     type: github
     endpoint: 'MSAL ObjC Service Connection'
     name: AzureAD/WorkplaceJoin-for-iOS

     # Define parallel jobs that run build script for specified targets
jobs:
- job: 'Validate_Pull_Request'
  displayName: Validate Pull Request
  pool:
    vmImage: 'macOS-14'
    timeOutInMinutes: 30

  steps:
  - script: |
          /bin/bash -c "sudo xcode-select -s /Applications/Xcode_15.4.app"
    displayName: 'Switch to use Xcode 15.4'
  - task: CmdLine@2
    displayName: Installing dependencies
    inputs:
      script: |
        gem install xcpretty slather bundler -N
      failOnStderr: true

# The following is needed to install the visionOS SDK on macos-14 vm image which
# doesn't have visionOS installed by default.
# TODO: Remove when macos-14-arm64 is supported on ADO.
  - task: Bash@3
    displayName: download visionOS SDK
    inputs:
      targetType: 'inline'
      script: |
        echo $(target)
        if [ $(target) == 'visionOSFramework' ]; then
            echo "Downloading simulator for visionOS"
            sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
            defaults write com.apple.dt.Xcode AllowUnsupportedVisionOSHost -bool YES
            defaults write com.apple.CoreSimulator AllowUnsupportedVisionOSHost -bool YES
            xcodebuild -downloadPlatform visionOS
        else
            echo "Not visionOS job, no download needed"
        fi
      failOnStderr: false

  - checkout: azure-activedirectory-tokenbroker-for-objc
    displayName: 'Checkout Broker'
    clean: true
    submodules: false
    fetchTags: true
    persistCredentials: true

  - checkout: microsoft-authentication-library-for-objc
    displayName: 'Checkout MSAL'
    clean: true
    submodules: false
    fetchTags: true
    path: 's/azure-activedirectory-tokenbroker-for-objc/ADAuthenticationBroker/Frameworks/microsoft-authentication-library-for-objc'
    persistCredentials: true

  - checkout: self
    displayName: 'Checkout IdentityCore branch'
    clean: true
    submodules: false
    fetchDepth: 1
    path: 's/azure-activedirectory-tokenbroker-for-objc/ADAuthenticationBroker/Frameworks/microsoft-authentication-library-for-objc/MSAL/IdentityCore'
    persistCredentials: false
  
  - checkout: WorkplaceJoin-for-iOS
    displayName: 'Checkout WPJ Submodule'
    clean: true
    submodules: true
    fetchTags: true
    path: 's/azure-activedirectory-tokenbroker-for-objc/ADAuthenticationBroker/Frameworks/WorkplaceJoin-for-iOS'
    persistCredentials: true

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AuthSdkResourceManager'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # if this fails, check out this bash script that includes diagnostics:
        # https://gist.github.com/johnterickson/19f80a3e969e39f1000d118739176e62
        # uncomment these for more debugging spew
        # GIT_TRACE=1
        # GIT_CURL_VERBOSE=1
        
        # Note that the resoruce is specified to limit the token to Azure DevOps
        $token = az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv
        Write-Host "##vso[task.setvariable variable=aadToken;issecret=true]$token"
  - task: Bash@3
    displayName: 'Checkout NGC Submodules'
    env:
      AccessToken: $(MSAzureToken_encoded)
    inputs:
      workingDirectory: $(Pipeline.Workspace)/s
      targetType: 'inline'
      script: |
        cd azure-activedirectory-tokenbroker-for-objc/ADAuthenticationBroker/Frameworks
        git -c http.https://msazure.visualstudio.com/DefaultCollection/One/_git/AD-MFA-NGCAuthentication.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init AD-MFA-NGCAuthentication
        cd AD-MFA-NGCAuthentication
        git -c http.https://msazure.visualstudio.com/DefaultCollection/One/_git/AD-MFA-NGCKeyProvider-ios.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init NGCKeyProvider
        git -c http.https://msazure.visualstudio.com/DefaultCollection/One/_git/AD-MFA-MSAuthNetworking.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init MSAuthNetworking

  - task: Bash@3
    displayName: 'Checkout WPJ openssl-msft submodule'
    inputs:
      workingDirectory: $(Pipeline.Workspace)/s
      targetType: 'inline'
      script: |
        cd azure-activedirectory-tokenbroker-for-objc
        REV=$(git rev-parse HEAD:ADAuthenticationBroker/Frameworks/WorkplaceJoin-for-iOS)
        cd ADAuthenticationBroker/Frameworks/WorkplaceJoin-for-iOS
        git pull origin $REV
        cd Frameworks
        git -c http.https://msazure.visualstudio.com/DefaultCollection/PlatformCrypto/_git/openssl-msft.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init openssl-msft

  - task: UsePythonVersion@0
    displayName: Use python 3.x
    inputs:
      versionSpec: '3.x'
      addToPath: true
      architecture: 'x64'

  - task: Bash@3
    displayName: Run Build script & check for Errors
    inputs:
      targetType: 'inline'
      script: |
        cd $(Agent.BuildDirectory)/s/azure-activedirectory-tokenbroker-for-objc
        { output=$(./build.py --target $(target) 2>&1 1>&3-) ;} 3>&1
        final_status=$(<./build/status.txt)
        echo "FINAL STATUS  = ${final_status}"
        echo "POSSIBLE ERRORS: ${output}"
        
        if [ $final_status != "0" ]; then
          echo "Build & Testing Failed! \n ${output}" >&2
        fi
      failOnStderr: true
  - task: Bash@3
    condition: always()
    displayName: Cleanup
    inputs:
      targetType: 'inline'
      script: |
        rm -rf $(Agent.BuildDirectory)/s/build/status.txt
  - task: PublishTestResults@2
    condition: always()
    displayName: Publish Test Report
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '$(Agent.BuildDirectory)/s/build/reports/*'
      failTaskOnFailedTests: true
      testRunTitle: 'Test Run - $(target)'











# steps:
# - task: AzureCLI@2
#   displayName: 'Azure CLI '
#   inputs:
#     azureSubscription: AuthSdkResourceManager
#     scriptType: pscore
#     scriptLocation: inlineScript
#     inlineScript: |
#      # if this fails, check out this bash script that includes diagnostics:
#      # https://gist.github.com/johnterickson/19f80a3e969e39f1000d118739176e62
#      # uncomment these for more debugging spew
#      # GIT_TRACE=1
#      # GIT_CURL_VERBOSE=1
#      # Note that the resource is specified to limit the token to Azure DevOps
#      $token = az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv
#      Write-Host "##vso[task.setvariable variable=aadToken;issecret=true]$token"

# #Your build pipeline references an undefined variable named ‘git rev-parse HEAD’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
# #Your build pipeline references an undefined variable named ‘aadToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
# #Your build pipeline references an undefined variable named ‘aadToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
# #Your build pipeline references an undefined variable named ‘aadToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
# #Your build pipeline references an undefined variable named ‘aadToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

# steps:
# - script: |
#    currentCommit=$(git rev-parse HEAD)
#    cd $(Agent.BuildDirectory)
#    mkdir broker_sdk
#    cd broker_sdk
#    git clone https://x-access-token:$BrokerAccessToken@github.com/AzureAD/azure-activedirectory-tokenbroker-for-objc.git
#    cd azure-activedirectory-tokenbroker-for-objc
#    git checkout origin/dev
   
#    # NGC submodule
   
#    cd ADAuthenticationBroker/Frameworks
#    git -c http.https://msazure.visualstudio.com/DefaultCollection/One/_git/AD-MFA-NGCAuthentication.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init AD-MFA-NGCAuthentication
#    cd AD-MFA-NGCAuthentication
#    git -c http.https://msazure.visualstudio.com/DefaultCollection/One/_git/AD-MFA-NGCKeyProvider-ios.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init NGCKeyProvider
#    git -c http.https://msazure.visualstudio.com/DefaultCollection/One/_git/AD-MFA-MSAuthNetworking.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init MSAuthNetworking
#    cd $(Agent.BuildDirectory)/broker_sdk/azure-activedirectory-tokenbroker-for-objc
   
#    # end NGC
   
#    # WPJ Submodules
   
#    echo "Checkout WPJ submodule"
#    cd $(Agent.BuildDirectory)/broker_sdk/azure-activedirectory-tokenbroker-for-objc
#    git submodule update --init --depth 1
#    cd ADAuthenticationBroker/Frameworks/WorkplaceJoin-for-iOS/Frameworks
#    git -c http.https://msazure.visualstudio.com/DefaultCollection/PlatformCrypto/_git/openssl-msft.extraheader="AUTHORIZATION: bearer $(aadToken)" submodule update --init openssl-msft
#    cd $(Agent.BuildDirectory)/broker_sdk/azure-activedirectory-tokenbroker-for-objc
   
#    # end WPJ
   
#    git submodule update --init --recursive
#    cd ADAuthenticationBroker/Frameworks/microsoft-authentication-library-for-objc/MSAL/IdentityCore/
   
#    if [ -n "$(system.pullRequest.sourceCommitId)" ]; then
#      echo "Using PR validation and checking out $(system.pullRequest.sourceCommitId)"
#      git checkout $(system.pullRequest.sourceCommitId)
#    else
#      echo "First parameter not supplied."
#      echo "Using commit validation and checking out $currentCommit"
#      git checkout $currentCommit
#    fi
#   displayName: 'Checkout Broker'
#   env:
#     SYSTEM_ACCESSTOKEN: $(system.accesstoken)
#     BrokerAccessToken: $(BrokerAccessToken)
#     ADOAccessToken: $(ADOAccessToken)



#     steps:
# - script: 'gem install slather -N'
#   displayName: 'Install slather'


#   steps:
# - task: UsePythonVersion@0
#   displayName: 'Use Python 3.x'


#   steps:
# - script: '/bin/bash -c "sudo xcode-select -s /Applications/Xcode_15.4.app"'
#   displayName: 'Switch to Xcode 15.4'


#   steps:
# - script: |
#    cd $(Agent.BuildDirectory)/broker_sdk/azure-activedirectory-tokenbroker-for-objc
#    python ./build.py
#   displayName: 'Run a python script for Broker'
