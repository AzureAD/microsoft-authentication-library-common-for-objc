parameters:
- name: build
  type: boolean
  default: true
- name: buildArtifactName
  type: string
  default: Build
- name: testLogArtifactName
  type: string
  default: ''

steps:
- ${{ if parameters.build }}:
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: Build logs'
    inputs:
      path: '_logs'
      artifact: '${{ parameters.buildArtifactName }} Logs [Attempt $(System.StageAttempt)]'
    condition: succeededOrFailed()
    continueOnError: true

- ${{ if ne(parameters.testLogArtifactName, '') }}:
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: ${{ parameters.testLogArtifactName }}'
    inputs:
      path: '$(Build.ArtifactStagingDirectory)/msaltest.tsv'
      artifact: '${{ parameters.testLogArtifactName }} [Attempt $(System.StageAttempt)]'
    condition: succeededOrFailed()
    continueOnError: true

  - task: PythonScript@0
    displayName: Check for screenshots folder
    inputs:
      scriptSource: inline
      script: |
        import os
        print(f'##vso[task.setvariable variable=hasScreenshots;]{os.path.isdir("_screenshots")}')
    condition: succeededOrFailed()
    continueOnError: true

  - task: PublishPipelineArtifact@1
    condition: eq(variables.hasScreenshots, 'True')
    displayName: 'Publish Artifact: Screenshots'
    inputs:
      path: '_screenshots'
      artifact: 'Test screenshots [Attempt $(System.StageAttempt)]'
    continueOnError: true

